/*
    run the file to create the first roid_address smart contract
    npx ts-node -P tsconfig.server.json ./blockchain/ethereum_env.ts
*/ 

import Web3 from 'web3';
import { send_sign_tx } from '../vautlBX/methods';

export { web3, roid_address_smart_contract_instance, deploy_ro_smartcontract, get_ro_contract_address, get_ro_smart_contract_instance, deploy_roid_address, get_public_wallet };


// creating Web3 instance to localhost Hardhat
const web3 = new Web3('http://localhost:8545');

//ganache first wallet address
const get_public_wallet = async () => {
    const accounts = await web3.eth.getAccounts();
    return accounts[0];
}

// ================================ smart contract - roid_address =============================================
const roid_address_abi = [
    {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "owner",
                "type": "address"
            }
        ],
        "name": "OwnableInvalidOwner",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "account",
                "type": "address"
            }
        ],
        "name": "OwnableUnauthorizedAccount",
        "type": "error"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "roid_hashing",
                "type": "string"
            }
        ],
        "name": "getSmartContract",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "roid_hashing",
                "type": "string"
            }
        ],
        "name": "getVaultBX",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "roid_hash",
                "type": "string"
            },
            {
                "internalType": "address",
                "name": "smartContract_address",
                "type": "address"
            }
        ],
        "name": "setSmartContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "roid_hashing",
                "type": "string"
            },
            {
                "internalType": "address",
                "name": "vaultBX_address",
                "type": "address"
            }
        ],
        "name": "setVaultBX",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "roid_hashing",
                "type": "string"
            },
            {
                "internalType": "address",
                "name": "vaultBX_address",
                "type": "address"
            }
        ],
        "name": "verifyVaultBX",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    }
];

const roid_address_bytecode ="608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b61090a806101bc5f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c80638da5cb5b116100595780638da5cb5b14610110578063c58992201461012e578063c6c4fbc61461015e578063f2fde38b1461017a57610086565b806340763c3e1461008a5780634986b388146100ba578063648451a8146100ea578063715018a614610106575b5f80fd5b6100a4600480360381019061009f91906106d1565b610196565b6040516100b19190610757565b60405180910390f35b6100d460048036038101906100cf919061079a565b6101e4565b6040516100e1919061080e565b60405180910390f35b61010460048036038101906100ff919061079a565b610259565b005b61010e6102c1565b005b6101186102d4565b6040516101259190610757565b60405180910390f35b610148600480360381019061014391906106d1565b6102fb565b6040516101559190610757565b60405180910390f35b6101786004803603810190610173919061079a565b610349565b005b610194600480360381019061018f9190610827565b6103b1565b005b5f61019f610435565b6002826040516101af91906108be565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff1660018460405161020c91906108be565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b610261610435565b8060018360405161027291906108be565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6102c9610435565b6102d25f6104bc565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f610304610435565b60018260405161031491906108be565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610351610435565b8060028360405161036291906108be565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6103b9610435565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610429575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104209190610757565b60405180910390fd5b610432816104bc565b50565b61043d61057d565b73ffffffffffffffffffffffffffffffffffffffff1661045b6102d4565b73ffffffffffffffffffffffffffffffffffffffff16146104ba5761047e61057d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104b19190610757565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6105e38261059d565b810181811067ffffffffffffffff82111715610602576106016105ad565b5b80604052505050565b5f610614610584565b905061062082826105da565b919050565b5f67ffffffffffffffff82111561063f5761063e6105ad565b5b6106488261059d565b9050602081019050919050565b828183375f83830152505050565b5f61067561067084610625565b61060b565b90508281526020810184848401111561069157610690610599565b5b61069c848285610655565b509392505050565b5f82601f8301126106b8576106b7610595565b5b81356106c8848260208601610663565b91505092915050565b5f602082840312156106e6576106e561058d565b5b5f82013567ffffffffffffffff81111561070357610702610591565b5b61070f848285016106a4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61074182610718565b9050919050565b61075181610737565b82525050565b5f60208201905061076a5f830184610748565b92915050565b61077981610737565b8114610783575f80fd5b50565b5f8135905061079481610770565b92915050565b5f80604083850312156107b0576107af61058d565b5b5f83013567ffffffffffffffff8111156107cd576107cc610591565b5b6107d9858286016106a4565b92505060206107ea85828601610786565b9150509250929050565b5f8115159050919050565b610808816107f4565b82525050565b5f6020820190506108215f8301846107ff565b92915050565b5f6020828403121561083c5761083b61058d565b5b5f61084984828501610786565b91505092915050565b5f81519050919050565b5f81905092915050565b5f5b83811015610883578082015181840152602081019050610868565b5f8484015250505050565b5f61089882610852565b6108a2818561085c565b93506108b2818560208601610866565b80840191505092915050565b5f6108c9828461088e565b91508190509291505056fea2646970667358221220aedddb1175f815b90819e83fe15fb13493ef6ee066e13165c5089c0cb312ae6764736f6c63430008140033";

let roid_address_smart_contract_instance : any;

const deploy_roid_address = async (platform_name : string) => {

    try{
        const public_wallet = await get_public_wallet();

        const contract = new web3.eth.Contract(roid_address_abi as any);
        const contract_instance = await contract.deploy({
            data: roid_address_bytecode,
            arguments: []
        })
        .send({
            from: public_wallet,
            gas: 5000000,      // 增加 gas 限制
            gasPrice: '900000000'    
        });

        roid_address_smart_contract_instance = new web3.eth.Contract(roid_address_abi as any, contract_instance.options.address);

        console.log(`[deploy smart contract] roid_address deploy for '${platform_name}' at : ${contract_instance.options.address} [OK]`);

        return contract_instance.options.address;
    }catch(err){
        console.log(`[deploy smart contract] roid_address error : ${err}`);
    }
}

// ================================ smart contract - ro_smartcontract  =================================================
const ro_smartcontract_abi = [
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "_RO_id_hashing",
                "type": "string"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [],
        "name": "InvalidInitialization",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "NotInitializing",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "owner",
                "type": "address"
            }
        ],
        "name": "OwnableInvalidOwner",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "account",
                "type": "address"
            }
        ],
        "name": "OwnableUnauthorizedAccount",
        "type": "error"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "string",
                "name": "message",
                "type": "string"
            }
        ],
        "name": "Debug",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "uint64",
                "name": "version",
                "type": "uint64"
            }
        ],
        "name": "Initialized",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [],
        "name": "RO_id_hashing",
        "outputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            },
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "dataid_authgoals",
        "outputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            },
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "dataid_authroles",
        "outputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            }
        ],
        "name": "dataid_timestamp",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "_RO_id_hashing",
                "type": "string"
            }
        ],
        "name": "initialize",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "data_id",
                "type": "string"
            },
            {
                "internalType": "string[]",
                "name": "authroles",
                "type": "string[]"
            },
            {
                "internalType": "string[]",
                "name": "authgoals",
                "type": "string[]"
            }
        ],
        "name": "set_data_auth",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "data_id",
                "type": "string"
            },
            {
                "internalType": "string[]",
                "name": "rp_auth_roles",
                "type": "string[]"
            },
            {
                "internalType": "string[]",
                "name": "rp_auth_goals",
                "type": "string[]"
            }
        ],
        "name": "verify_rp",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            },
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    }
];

const ro_smartcontract_bytecode = "";

const deploy_ro_smartcontract = async (RO_id_hashing : string) => {

    try{
        const public_wallet = await get_public_wallet();
        let ro_vaultBX_address = await (await roid_address_smart_contract_instance).methods.getVaultBX(RO_id_hashing).call();

        // get sign_tx of deploy smart contract by vaultBX wallet
        const contract = new web3.eth.Contract(ro_smartcontract_abi as any);
        const data = await contract.deploy({ data: ro_smartcontract_bytecode, arguments: [RO_id_hashing] }).encodeABI();
        const tx = {
            address_from: ro_vaultBX_address,
            address_to: null,  // 因為是部署合約，所以沒有接收地址
            chainID : "1337", 
            amount : "0",  
            gas_price : await web3.eth.getGasPrice(),  
            gas_limit : 10000000,  
            nonce : await web3.eth.getTransactionCount(ro_vaultBX_address, 'latest'),  
            data : data,  
            is_private : false 
        }

        let sign_tx = await send_sign_tx(RO_id_hashing, tx);
        let signed_transaction = sign_tx?.data.data.signed_transaction;
        console.log('[deploy_smart_contract] get signed_transaction to deploy the contract: ', signed_transaction);

        // send the sign_tx and deploy smart contract 
        const receipt = await web3.eth.sendSignedTransaction(signed_transaction as any);
        const contarct_address = receipt.contractAddress;
        console.log(`[deploy_smart_contract] roid_smartcontract deploy for "${RO_id_hashing}" at "${contarct_address}" [OK]`);
    
        // add to roid_address
        await (await roid_address_smart_contract_instance).methods.setSmartContract(RO_id_hashing, contarct_address).send({ from: public_wallet });

        console.log(`[smart contract method] roid_smartcontract use setSamrtContract mapping : ${RO_id_hashing} => ${contarct_address} [OK]`);

        return contarct_address;

    }catch(err){
        console.error(`[deploy smart contract] deploy_ro_smartcontract error : ${err}`);
    }
}

const get_ro_contract_address = async (ro_id_hashing : string) => {
    let ro_contract_address = await (await roid_address_smart_contract_instance).methods.getSmartContract(ro_id_hashing).call();

    if(ro_contract_address == "0x0000000000000000000000000000000000000000"){
        ro_contract_address = await deploy_ro_smartcontract(ro_id_hashing);
    }

    return ro_contract_address;
}

const get_ro_smart_contract_instance = async ( contract_address : string ) => {
    const ro_smartcontract_smart_contract_instance = new web3.eth.Contract(ro_smartcontract_abi as any, contract_address);
    return ro_smartcontract_smart_contract_instance;
}