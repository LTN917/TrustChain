import Web3 from 'web3';


export { web3, get_public_wallet, deploy_roid_address, roid_address_smart_contract_instance, };


// creating Web3 instance to localhost Ganache
const web3 = new Web3('http://localhost:7545');

//ganache first wallet address
const get_public_wallet = async () => {
    const accounts = await web3.eth.getAccounts();
    return accounts[0];
}

// smart contract - roid_address
const roid_address_abi = [
    {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "owner",
                "type": "address"
            }
        ],
        "name": "OwnableInvalidOwner",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "account",
                "type": "address"
            }
        ],
        "name": "OwnableUnauthorizedAccount",
        "type": "error"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "roid_hashing",
                "type": "string"
            }
        ],
        "name": "getSmartContract",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "roid_hash",
                "type": "string"
            },
            {
                "internalType": "address",
                "name": "smartContract_address",
                "type": "address"
            }
        ],
        "name": "setSmartContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "roid_hashing",
                "type": "string"
            },
            {
                "internalType": "address",
                "name": "vaultBX_address",
                "type": "address"
            }
        ],
        "name": "setVaultBX",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "roid_hashing",
                "type": "string"
            },
            {
                "internalType": "address",
                "name": "vaultBX_address",
                "type": "address"
            }
        ],
        "name": "verifyVaultBX",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    }
];

const roid_address_bytecode ="608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b610881806101bc5f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063715018a611610059578063715018a6146100fb5780638da5cb5b14610105578063c6c4fbc614610123578063f2fde38b1461013f5761007b565b806340763c3e1461007f5780634986b388146100af578063648451a8146100df575b5f80fd5b61009960048036038101906100949190610648565b61015b565b6040516100a691906106ce565b60405180910390f35b6100c960048036038101906100c49190610711565b6101a9565b6040516100d69190610785565b60405180910390f35b6100f960048036038101906100f49190610711565b61021e565b005b610103610286565b005b61010d610299565b60405161011a91906106ce565b60405180910390f35b61013d60048036038101906101389190610711565b6102c0565b005b6101596004803603810190610154919061079e565b610328565b005b5f6101646103ac565b6002826040516101749190610835565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff166001846040516101d19190610835565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6102266103ac565b806001836040516102379190610835565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61028e6103ac565b6102975f610433565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102c86103ac565b806002836040516102d99190610835565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6103306103ac565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a0575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161039791906106ce565b60405180910390fd5b6103a981610433565b50565b6103b46104f4565b73ffffffffffffffffffffffffffffffffffffffff166103d2610299565b73ffffffffffffffffffffffffffffffffffffffff1614610431576103f56104f4565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161042891906106ce565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61055a82610514565b810181811067ffffffffffffffff8211171561057957610578610524565b5b80604052505050565b5f61058b6104fb565b90506105978282610551565b919050565b5f67ffffffffffffffff8211156105b6576105b5610524565b5b6105bf82610514565b9050602081019050919050565b828183375f83830152505050565b5f6105ec6105e78461059c565b610582565b90508281526020810184848401111561060857610607610510565b5b6106138482856105cc565b509392505050565b5f82601f83011261062f5761062e61050c565b5b813561063f8482602086016105da565b91505092915050565b5f6020828403121561065d5761065c610504565b5b5f82013567ffffffffffffffff81111561067a57610679610508565b5b6106868482850161061b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106b88261068f565b9050919050565b6106c8816106ae565b82525050565b5f6020820190506106e15f8301846106bf565b92915050565b6106f0816106ae565b81146106fa575f80fd5b50565b5f8135905061070b816106e7565b92915050565b5f806040838503121561072757610726610504565b5b5f83013567ffffffffffffffff81111561074457610743610508565b5b6107508582860161061b565b9250506020610761858286016106fd565b9150509250929050565b5f8115159050919050565b61077f8161076b565b82525050565b5f6020820190506107985f830184610776565b92915050565b5f602082840312156107b3576107b2610504565b5b5f6107c0848285016106fd565b91505092915050565b5f81519050919050565b5f81905092915050565b5f5b838110156107fa5780820151818401526020810190506107df565b5f8484015250505050565b5f61080f826107c9565b61081981856107d3565b93506108298185602086016107dd565b80840191505092915050565b5f6108408284610805565b91508190509291505056fea2646970667358221220517f086023bd659bbece3b63987eb5c26b0dede95e729bc327c30508f5cdee4664736f6c63430008180033";

const deploy_roid_address = async () => {

    const public_wallet = await get_public_wallet();

    const contract = new web3.eth.Contract(roid_address_abi);
    const contract_instance = await contract.deploy({
        data: roid_address_bytecode,
        arguments: []
    })
    .send({
        from: public_wallet,
        gas: '3000000',
        gasPrice: '863252572'
    });

    console.log(`[ deploy smart contract ] roid_address deploy at : ${contract_instance.options.address} [OK]`);
}

deploy_roid_address();
;

const roid_address_address = "";

const roid_address_smart_contract_instance = new web3.eth.Contract(roid_address_abi, roid_address_address);

// smart contract - ro_smartcontract
const ro_smartcontract_abi = [
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "_RO_id_hashing",
                "type": "string"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [],
        "name": "InvalidInitialization",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "NotInitializing",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "owner",
                "type": "address"
            }
        ],
        "name": "OwnableInvalidOwner",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "account",
                "type": "address"
            }
        ],
        "name": "OwnableUnauthorizedAccount",
        "type": "error"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "uint64",
                "name": "version",
                "type": "uint64"
            }
        ],
        "name": "Initialized",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [],
        "name": "RO_id_hashing",
        "outputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            }
        ],
        "name": "dataAuthMap",
        "outputs": [
            {
                "internalType": "string",
                "name": "dataAuth",
                "type": "string"
            },
            {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "_RO_id_hashing",
                "type": "string"
            }
        ],
        "name": "initialize",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "data_id",
                "type": "string"
            },
            {
                "internalType": "string",
                "name": "data_auth",
                "type": "string"
            }
        ],
        "name": "set_data_auth",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "data_id",
                "type": "string"
            },
            {
                "internalType": "string",
                "name": "rp_data",
                "type": "string"
            }
        ],
        "name": "verify_rp",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    }
];

const ro_smartcontract_bytecode = "608060405234801562000010575f80fd5b5060405162001a0438038062001a04833981810160405281019062000036919062000653565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620006e5565b60405180910390fd5b620000bb81620000d460201b60201c565b50620000cd816200019560201b60201c565b5062000a8a565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f620001a66200034060201b60201c565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015620001ef5750825b90505f60018367ffffffffffffffff161480156200022357505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801562000232575080155b156200026a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315620002b8576001855f0160086101000a81548160ff0219169083151502179055505b8560019081620002c9919062000937565b50620002db336200036760201b60201c565b831562000338575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516200032f919062000a6f565b60405180910390a15b505050505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b62000377620003fe60201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620003ea575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620003e19190620006e5565b60405180910390fd5b620003fb81620000d460201b60201c565b50565b6200040e620004a060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1662000434620004a760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200049e5762000460620004a060201b60201c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401620004959190620006e5565b60405180910390fd5b565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200052f82620004e7565b810181811067ffffffffffffffff82111715620005515762000550620004f7565b5b80604052505050565b5f62000565620004ce565b905062000573828262000524565b919050565b5f67ffffffffffffffff821115620005955762000594620004f7565b5b620005a082620004e7565b9050602081019050919050565b5f5b83811015620005cc578082015181840152602081019050620005af565b5f8484015250505050565b5f620005ed620005e78462000578565b6200055a565b9050828152602081018484840111156200060c576200060b620004e3565b5b62000619848285620005ad565b509392505050565b5f82601f830112620006385762000637620004df565b5b81516200064a848260208601620005d7565b91505092915050565b5f602082840312156200066b576200066a620004d7565b5b5f82015167ffffffffffffffff8111156200068b576200068a620004db565b5b620006998482850162000621565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620006cd82620006a2565b9050919050565b620006df81620006c1565b82525050565b5f602082019050620006fa5f830184620006d4565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200074f57607f821691505b6020821081036200076557620007646200070a565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007c97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200078c565b620007d586836200078c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200081f620008196200081384620007ed565b620007f6565b620007ed565b9050919050565b5f819050919050565b6200083a83620007ff565b62000852620008498262000826565b84845462000798565b825550505050565b5f90565b620008686200085a565b620008758184846200082f565b505050565b5b818110156200089c57620008905f826200085e565b6001810190506200087b565b5050565b601f821115620008eb57620008b5816200076b565b620008c0846200077d565b81016020851015620008d0578190505b620008e8620008df856200077d565b8301826200087a565b50505b505050565b5f82821c905092915050565b5f6200090d5f1984600802620008f0565b1980831691505092915050565b5f620009278383620008fc565b9150826002028217905092915050565b620009428262000700565b67ffffffffffffffff8111156200095e576200095d620004f7565b5b6200096a825462000737565b62000977828285620008a0565b5f60209050601f831160018114620009ad575f841562000998578287015190505b620009a485826200091a565b86555062000a13565b601f198416620009bd866200076b565b5f5b82811015620009e657848901518255600182019150602085019450602081019050620009bf565b8683101562000a06578489015162000a02601f891682620008fc565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f62000a5762000a5162000a4b8462000a1b565b620007f6565b62000a24565b9050919050565b62000a698162000a37565b82525050565b5f60208201905062000a845f83018462000a5e565b92915050565b610f6c8062000a985f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c80638bb749af116100595780638bb749af146101115780638da5cb5b1461012f578063f2fde38b1461014d578063f62d18881461016957610086565b80631c2226601461008a5780633908dd07146100a6578063715018a6146100d75780637df35b35146100e1575b5f80fd5b6100a4600480360381019061009f919061093b565b610185565b005b6100c060048036038101906100bb91906109b1565b6101e5565b6040516100ce929190610a8a565b60405180910390f35b6100df6102a3565b005b6100fb60048036038101906100f6919061093b565b6102b6565b6040516101089190610ad2565b60405180910390f35b6101196103b0565b6040516101269190610aeb565b60405180910390f35b61013761043c565b6040516101449190610b4a565b60405180910390f35b61016760048036038101906101629190610b8d565b610463565b005b610183600480360381019061017e91906109b1565b6104e7565b005b61018d610678565b6040518060400160405280828152602001428152506002836040516101b29190610bf2565b90815260200160405180910390205f820151815f0190816101d39190610e02565b50602082015181600101559050505050565b6002818051602081018201805184825260208301602085012081835280955050505050505f91509050805f01805461021c90610c35565b80601f016020809104026020016040519081016040528092919081815260200182805461024890610c35565b80156102935780601f1061026a57610100808354040283529160200191610293565b820191905f5260205f20905b81548152906001019060200180831161027657829003601f168201915b5050505050908060010154905082565b6102ab610678565b6102b45f6106ff565b565b5f6102bf610678565b5f6002846040516102d09190610bf2565b90815260200160405180910390206040518060400160405290815f820180546102f890610c35565b80601f016020809104026020016040519081016040528092919081815260200182805461032490610c35565b801561036f5780601f106103465761010080835404028352916020019161036f565b820191905f5260205f20905b81548152906001019060200180831161035257829003601f168201915b5050505050815260200160018201548152505090508280519060200120815f0151805190602001201480156103a757505f8160200151115b91505092915050565b600180546103bd90610c35565b80601f01602080910402602001604051908101604052809291908181526020018280546103e990610c35565b80156104345780601f1061040b57610100808354040283529160200191610434565b820191905f5260205f20905b81548152906001019060200180831161041757829003601f168201915b505050505081565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61046b610678565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104db575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104d29190610b4a565b60405180910390fd5b6104e4816106ff565b50565b5f6104f06107c0565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156105385750825b90505f60018367ffffffffffffffff1614801561056b57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610579575080155b156105b0576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156105fd576001855f0160086101000a81548160ff0219169083151502179055505b856001908161060c9190610e02565b5061061633610463565b8315610670575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516106679190610f1d565b60405180910390a15b505050505050565b6106806107e7565b73ffffffffffffffffffffffffffffffffffffffff1661069e61043c565b73ffffffffffffffffffffffffffffffffffffffff16146106fd576106c16107e7565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106f49190610b4a565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61084d82610807565b810181811067ffffffffffffffff8211171561086c5761086b610817565b5b80604052505050565b5f61087e6107ee565b905061088a8282610844565b919050565b5f67ffffffffffffffff8211156108a9576108a8610817565b5b6108b282610807565b9050602081019050919050565b828183375f83830152505050565b5f6108df6108da8461088f565b610875565b9050828152602081018484840111156108fb576108fa610803565b5b6109068482856108bf565b509392505050565b5f82601f830112610922576109216107ff565b5b81356109328482602086016108cd565b91505092915050565b5f8060408385031215610951576109506107f7565b5b5f83013567ffffffffffffffff81111561096e5761096d6107fb565b5b61097a8582860161090e565b925050602083013567ffffffffffffffff81111561099b5761099a6107fb565b5b6109a78582860161090e565b9150509250929050565b5f602082840312156109c6576109c56107f7565b5b5f82013567ffffffffffffffff8111156109e3576109e26107fb565b5b6109ef8482850161090e565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a2f578082015181840152602081019050610a14565b5f8484015250505050565b5f610a44826109f8565b610a4e8185610a02565b9350610a5e818560208601610a12565b610a6781610807565b840191505092915050565b5f819050919050565b610a8481610a72565b82525050565b5f6040820190508181035f830152610aa28185610a3a565b9050610ab16020830184610a7b565b9392505050565b5f8115159050919050565b610acc81610ab8565b82525050565b5f602082019050610ae55f830184610ac3565b92915050565b5f6020820190508181035f830152610b038184610a3a565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b3482610b0b565b9050919050565b610b4481610b2a565b82525050565b5f602082019050610b5d5f830184610b3b565b92915050565b610b6c81610b2a565b8114610b76575f80fd5b50565b5f81359050610b8781610b63565b92915050565b5f60208284031215610ba257610ba16107f7565b5b5f610baf84828501610b79565b91505092915050565b5f81905092915050565b5f610bcc826109f8565b610bd68185610bb8565b9350610be6818560208601610a12565b80840191505092915050565b5f610bfd8284610bc2565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610c4c57607f821691505b602082108103610c5f57610c5e610c08565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610cc17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610c86565b610ccb8683610c86565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610d06610d01610cfc84610a72565b610ce3565b610a72565b9050919050565b5f819050919050565b610d1f83610cec565b610d33610d2b82610d0d565b848454610c92565b825550505050565b5f90565b610d47610d3b565b610d52818484610d16565b505050565b5b81811015610d7557610d6a5f82610d3f565b600181019050610d58565b5050565b601f821115610dba57610d8b81610c65565b610d9484610c77565b81016020851015610da3578190505b610db7610daf85610c77565b830182610d57565b50505b505050565b5f82821c905092915050565b5f610dda5f1984600802610dbf565b1980831691505092915050565b5f610df28383610dcb565b9150826002028217905092915050565b610e0b826109f8565b67ffffffffffffffff811115610e2457610e23610817565b5b610e2e8254610c35565b610e39828285610d79565b5f60209050601f831160018114610e6a575f8415610e58578287015190505b610e628582610de7565b865550610ec9565b601f198416610e7886610c65565b5f5b82811015610e9f57848901518255600182019150602085019450602081019050610e7a565b86831015610ebc5784890151610eb8601f891682610dcb565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f610f07610f02610efd84610ed1565b610ce3565b610eda565b9050919050565b610f1781610eed565b82525050565b5f602082019050610f305f830184610f0e565b9291505056fea26469706673582212206a8b8c6af6c8b694805f8ee6d2402ef568fa1feeb9466294f7a68b83d68a902964736f6c63430008180033";

const deploy_ro_smartcontract = async (RO_id_hashing : string) => {

    const public_wallet = await get_public_wallet();

    // deploy
    const contract = new web3.eth.Contract(ro_smartcontract_abi);
    const contract_instance = await contract.deploy({
        data: ro_smartcontract_bytecode,
        arguments: [RO_id_hashing]
    })
    .send({
        from: public_wallet,
        gas: '3000000',
        gasPrice: '30000000000'
    });

    console.log(`[ deploy smart contract ] roi_smartcontrac deploy for ${RO_id_hashing}  at : ${contract_instance.options.address} [OK]`);

    // add to roid_address
    // (await roid_address_smart_contract_instance).methods.
}


const get_ro_smartcontract_contract_instance = async ( Ro_id_hashing : string ) => {

}
